#!/usr/bin/env zsh

action=$1
param1=$2
param2=$3

info() {
  kubectl cluster-info
}

ctx() {
  kubectl config get-contexts
}

use_ctx() {
  kubectl config use-context $param1
}

ns() {
  kubectl get namespace
}

use_ns() {
  kubectl config set-context --current --namespace $param1
}

svc() {
  kubectl get svc
}

po() {
  kubectl get po -o wide
}

logs() {
  kubectl logs $param1
}

exec() {
  kubectl exec --stdin --tty $param1 -- /bin/bash
}

port() {
  kubectl port-forward $param1 $param2
}

desc() {
  kubectl describe po $param1
}

cluster() {
  kubectl config get-clusters
}

user() {
  kubectl config get-users
}

usage() {
  echo Usage
  echo '  - info'
  echo '  - ctx'
  echo '  - use_ctx context'
  echo '  - ns'
  echo '  - use_ns namespace'
  echo '  - svc'
  echo '  - po'
  echo '  - logs pod'
  echo '  - exec pod'
  echo '  - port pod local_port:pod_port'
  echo '  - desc pod'
  echo '  - cluster'
  echo '  - user'
}

case $action in
  info)
    info
  ;;
  ctx)
    ctx
  ;;
  use_ctx)
    use_ctx
  ;;
  ns)
    ns
  ;;
  use_ns)
    use_ns
  ;;
  svc)
    svc
  ;;
  po)
    po
  ;;
  logs)
    logs
  ;;
  exec)
    exec
  ;;
  port)
    port
  ;;
  desc)
    desc
  ;;
  cluster)
    cluster
  ;;
  user)
    user
  ;;
  *)
    usage
  ;;
esac
